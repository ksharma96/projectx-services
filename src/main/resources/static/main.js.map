{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/welcome-landing/login/login.component.ts","./src/app/welcome-landing/login/login.component.html","./src/app/welcome-landing/sign-up/sign-up.component.ts","./src/app/welcome-landing/sign-up/sign-up.component.html","./src/app/welcome-landing/welcome-landing.component.ts","./src/app/welcome-landing/welcome-landing.component.html","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { WelcomeLandingComponent } from './welcome-landing/welcome-landing.component';\r\nimport { SignUpComponent } from './welcome-landing/sign-up/sign-up.component';\r\nimport { LoginComponent } from './welcome-landing/login/login.component';\r\nimport { NgModule, Component } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nconst routes: Routes = [\r\n  {path:'login', component: LoginComponent},\r\n  {path:'signup', component: SignUpComponent},\r\n  { path: '',   redirectTo: '/', pathMatch: 'full' },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\nexport const routingComponents = [LoginComponent, SignUpComponent, WelcomeLandingComponent]\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'projectx-ui';\r\n}\r\n","\r\n\r\n<app-welcome-landing>\r\n</app-welcome-landing>\r\n<router-outlet></router-outlet>\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { AppRoutingModule, routingComponents } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { WelcomeLandingComponent } from './welcome-landing/welcome-landing.component';\r\nimport { SignUpComponent } from './welcome-landing/sign-up/sign-up.component';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport {MatSliderModule} from '@angular/material/slider';\r\nimport {MatToolbarModule} from '@angular/material/toolbar';\r\nimport {MatButtonModule} from '@angular/material/button';\r\nimport {MatCheckboxModule} from '@angular/material/checkbox';\r\nimport {MatInputModule} from '@angular/material/input';\r\nimport {MatAutocompleteModule} from '@angular/material/autocomplete';\r\nimport {MatDatepickerModule} from '@angular/material/datepicker';\r\nimport {MatFormFieldModule} from '@angular/material/form-field';\r\nimport {MatRadioModule} from '@angular/material/radio';\r\nimport {MatSelectModule} from '@angular/material/select';\r\nimport {MatSlideToggleModule} from '@angular/material/slide-toggle';\r\nimport {MatMenuModule} from '@angular/material/menu';\r\nimport {MatSidenavModule} from '@angular/material/sidenav';\r\nimport {MatListModule} from '@angular/material/list';\r\nimport {MatGridListModule} from '@angular/material/grid-list';\r\nimport {MatCardModule} from '@angular/material/card';\r\nimport {MatStepperModule} from '@angular/material/stepper';\r\nimport {MatTabsModule} from '@angular/material/tabs';\r\nimport {MatExpansionModule} from '@angular/material/expansion';\r\nimport {MatButtonToggleModule} from '@angular/material/button-toggle';\r\nimport {MatChipsModule} from '@angular/material/chips';\r\nimport {MatIconModule} from '@angular/material/icon';\r\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\r\nimport {MatProgressBarModule} from '@angular/material/progress-bar';\r\nimport {MatDialogModule} from '@angular/material/dialog';\r\nimport {MatTooltipModule} from '@angular/material/tooltip';\r\nimport {MatSnackBarModule} from '@angular/material/snack-bar';\r\nimport {MatTableModule} from '@angular/material/table';\r\nimport {MatSortModule} from '@angular/material/sort';\r\nimport {MatPaginatorModule} from '@angular/material/paginator';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { LoginComponent } from './welcome-landing/login/login.component';\r\nimport { HttpClientModule } from '@angular/common/http';\r\n// import {routingComponents} from './../app/app-routing.module.ts'\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    WelcomeLandingComponent,\r\n    SignUpComponent,\r\n    LoginComponent,\r\n    routingComponents\r\n  ],\r\n  imports: [\r\n    HttpClientModule,\r\n    FormsModule,\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    BrowserAnimationsModule,\r\n    MatSliderModule,\r\n    BrowserModule,\r\n    BrowserAnimationsModule,\r\n    MatCheckboxModule,\r\n    MatButtonModule,\r\n    MatInputModule,\r\n    MatAutocompleteModule,\r\n    MatDatepickerModule,\r\n    MatFormFieldModule,\r\n    MatRadioModule,\r\n    MatSelectModule,\r\n    MatSliderModule,\r\n    MatSlideToggleModule,\r\n    MatMenuModule,\r\n    MatSidenavModule,\r\n    MatListModule,\r\n    MatGridListModule,\r\n    MatCardModule,\r\n    MatStepperModule,\r\n    MatTabsModule,\r\n    MatExpansionModule,\r\n    MatButtonToggleModule,\r\n    MatChipsModule,\r\n    MatIconModule,\r\n    MatProgressSpinnerModule,\r\n    MatProgressBarModule,\r\n    MatDialogModule,\r\n    MatTooltipModule,\r\n    MatSnackBarModule,\r\n    MatTableModule,\r\n    MatSortModule,\r\n    MatPaginatorModule,\r\n    MatToolbarModule,\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n\r\n  username:string;\r\n  password:string;\r\n\r\n  jsonData:JSON;\r\n\r\n  username_get:string\r\n\r\n  routeToUserSession=false;\r\n\r\n  constructor(private httpClient:HttpClient) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n  login() {\r\n    let received_username:string;\r\n    let receieved_password:string;\r\n    let url = \"http://localhost:8080/user/getUserByUsername\"\r\n    this.httpClient.post<JSON>(url, this.username).subscribe(data=>{\r\n        if (Object.keys(data).length!=0) {\r\n            received_username = data[0].username;\r\n            receieved_password = data[0].password;\r\n            if (receieved_password == this.password) {\r\n              this.routeToUserSession=true;\r\n              console.log('LOGGED IN to User Session!');\r\n            }\r\n            else {\r\n              console.log('Incorrect password')\r\n            }\r\n        }\r\n        else {\r\n          console.log('User not found')\r\n        }\r\n\r\n    });\r\n\r\n  }\r\n\r\n}\r\n","   <mat-card class=\"example-card\">\r\n    <mat-card-header>\r\n      <mat-card-title>Login</mat-card-title>\r\n    </mat-card-header>\r\n    <mat-card-content>\r\n      <form class=\"example-form\">\r\n        <table class=\"example-full-width\" cellspacing=\"0\">\r\n          <tr>\r\n            <td>\r\n              <mat-form-field class=\"example-full-width\">\r\n              <input matInput placeholder=\"Username\" [(ngModel)]=\"username\" name=\"username\" required>\r\n              </mat-form-field>\r\n            </td>\r\n          </tr>\r\n          <tr>\r\n          <td><mat-form-field class=\"example-full-width\">\r\n            <input matInput placeholder=\"Password\" [(ngModel)]=\"password\"type=\"password\" name=\"password\" required>\r\n          </mat-form-field></td>\r\n        </tr></table>\r\n      </form>\r\n      <!-- <mat-spinner [style.display]=\"showSpinner ? 'block' : 'noness'\"></mat-spinner> -->\r\n    </mat-card-content>\r\n    <mat-card-actions>\r\n      <button mat-raised-button (click)=\"login()\" color=\"primary\">Login</button>\r\n    </mat-card-actions>\r\n  </mat-card>\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-sign-up',\r\n  templateUrl: './sign-up.component.html',\r\n  styleUrls: ['./sign-up.component.css']\r\n})\r\nexport class SignUpComponent implements OnInit {\r\n\r\n    firstname:string;\r\n    lastname:string;\r\n    username:string;\r\n    address:string;\r\n    email:string;\r\n    password:string;\r\n\r\n\r\n  constructor(private httpClient: HttpClient) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  register() {\r\n    let url = \"http://localhost:8080/user/add\"\r\n    const body = {\r\n      username:this.username,\r\n      password:this.password,\r\n      firstname:this.firstname,\r\n      lastname:this.lastname,\r\n      email:this.email\r\n    }\r\n    console.log(body);\r\n    this.httpClient.post(url, body, {responseType:'text'}).subscribe(data=>{\r\n        console.log(data);\r\n    });\r\n  }\r\n}\r\n\r\n","\r\n    <mat-toolbar>\r\n      <span>Registration</span>\r\n   </mat-toolbar>\r\n   <mat-card class=\"my-card\">\r\n    <mat-card-content>\r\n      <form class=\"my-form\">\r\n         <mat-form-field class=\"full-width\">\r\n                <mat-label>First Name</mat-label>\r\n                <input  matInput  placeholder=\"First name\"  name=\"fname\"  required [(ngModel)]=\"firstname\">\r\n             </mat-form-field>\r\n             <mat-form-field class=\"full-width\">\r\n                <mat-label>Last Name</mat-label>\r\n                <input  matInput  placeholder=\"Last Name\" name=\"lname\"  required [(ngModel)]=\"lastname\">\r\n             </mat-form-field>\r\n             <mat-form-field class=\"full-width\">\r\n                <mat-label>Address</mat-label>\r\n                <input  matInput  placeholder=\"Address\" name=\"address\"  required [(ngModel)]=\"address\">\r\n             </mat-form-field>\r\n             <mat-form-field class=\"full-width\">\r\n                <mat-label>Email</mat-label>\r\n                <input  matInput  placeholder=\"Email\" name=\"email\" required [(ngModel)]=\"email\">\r\n             </mat-form-field>\r\n             <mat-form-field class=\"full-width\">\r\n              <mat-label>Username</mat-label>\r\n              <input  matInput  placeholder=\"Username\"  name=\"username\" required [(ngModel)]=\"username\">\r\n           </mat-form-field>\r\n             <mat-form-field class=\"full-width\">\r\n                <mat-label>Password</mat-label>\r\n                <input  matInput  placeholder=\"Password\"  name=\"password\" required [(ngModel)]=\"password\">\r\n             </mat-form-field>\r\n      </form>\r\n    </mat-card-content>\r\n    <mat-card-actions>\r\n      <button mat-raised-button (click)=\"register()\" color=\"primary\">REGISTER</button>\r\n    </mat-card-actions>\r\n   </mat-card>\r\n\r\n\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-welcome-landing',\r\n  templateUrl: './welcome-landing.component.html',\r\n  styleUrls: ['./welcome-landing.component.css']\r\n})\r\nexport class WelcomeLandingComponent implements OnInit {\r\n\r\n  showSignupClicked=false;\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  clickedSignUp() {\r\n    this.showSignupClicked=true;\r\n  }\r\n\r\n  goHome() {\r\n    this.showSignupClicked=false;\r\n  }\r\n\r\n\r\n\r\n}\r\n","<mat-toolbar color=\"primary\">\r\n  <mat-toolbar-row>\r\n  <button mat-button class=\"primary\" routerLink=\"/\" (click)=\"goHome()\">LOLZ App!</button>\r\n      <span class=\"example-fill-remaining-space\"></span>\r\n      <span class=\"align-center\"></span>\r\n      <span class=\"example-spacer\"></span>\r\n      <button mat-button>About</button>\r\n      <button mat-button>Contact</button>\r\n      <div class=\"pull-to-right\">\r\n        <span>New User?&nbsp;</span><button mat-raised-button color=\"accent\" (click)=\"clickedSignUp()\" routerLink=\"/signup\" routerLinkActive=\"active\">Sign Up</button>\r\n      </div>\r\n      <button mat-icon-button [matMenuTriggerFor]=\"menu\">\r\n    <mat-icon>more_vert</mat-icon>\r\n  </button>\r\n  <mat-menu #menu=\"matMenu\">\r\n    <button mat-menu-item>\r\n      <mat-icon>dialpad</mat-icon>\r\n      <span>Redial</span>\r\n    </button>\r\n    <button mat-menu-item disabled>\r\n      <mat-icon>voicemail</mat-icon>\r\n      <span>Check voicemail</span>\r\n    </button>\r\n    <button mat-menu-item>\r\n      <mat-icon>notifications_off</mat-icon>\r\n      <span>Disable alerts</span>\r\n    </button>\r\n  </mat-menu>\r\n   </mat-toolbar-row>\r\n   </mat-toolbar>\r\n<!-- toolbar ends here -->\r\n\r\n   <app-login *ngIf=\"!showSignupClicked\"></app-login>\r\n<!-- login box ends here -->\r\n\r\n\r\n\r\n\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"],"sourceRoot":"webpack:///"}